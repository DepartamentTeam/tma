//@ts-nocheck
import { Segments } from "../../../shared/ui/Segments/Segments.tsx";
// import { useState, useRef, ReactNode } from "react";
import { Chip } from "../../../shared/ui/Chip/Chip.tsx";
import style from "./style.module.css";
import {
  Dictionary,
  Locale,
  RawDictionary,
} from "../../../shared/i18n/index.ts";

import * as i18n from "@solid-primitives/i18n";
import {
  Show,
  createEffect,
  createMemo,
  createResource,
  createSignal,
  onCleanup,
  onMount,
} from "solid-js";
import * as en from "../../../shared/i18n/en.ts";
import { A } from "@solidjs/router";
import { getShortSalary } from "../helpers/index.ts";
import "hammerjs";

import pm from "./assets/pm.webp";

// import { useTranslations } from "next-intl";
// import {
// 	useDragControls,
// 	useMotionValue,
// 	useMotionValueEvent,
// 	useTransform,
// 	motion,
// } from "framer-motion";
// import { MathOperations } from "@gravity-ui/icons";
// import { Segments } from "/shared/ui/Segments/Segments";

export type TJob = {
  job_id: number;
  title: string;
  salary: string;
  created: string;
  company: string;
  url: string;
  employment_type: string;
  conditions: "remote" | "hybrid" | "office";
  location: string;
  text?: string;
  country: "gm" | "en" | "pl" | "sw";
  handleDrop: (id: number) => void;
  handleAdd: (id: number) => void;
  actions: ReactNode;
  class?: string;
  draggable?: boolean;
  type: "job" | "cta";
  idx: number;
};

type CountryProps = {
  title: string;
  location: string;
};

function getCountryByLocation(location: string): string {
  var arr = location.split(",");

  return arr[arr.length - 1];
}

function getIconByCountry(location: string): string {
  //@ts-nocheck
  var res = "";
  const iconsByCountry = {
    sw: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_19005)"><path d="M11.9992 24.0008C18.6266 24.0013 23.9996 18.6291 24 12.0017C24.0005 5.37426 18.6283 0.00130176 12.0009 0.000838609C5.37344 0.000375458 0.000479034 5.37258 1.58832e-05 12C-0.000447268 18.6274 5.37176 24.0004 11.9992 24.0008Z" fill="#FFDA44"/><path d="M9.3915 10.4355L23.8986 10.4365C23.132 4.54866 18.0978 0.0013408 12.0009 0.000914728C11.1049 0.000852114 10.2321 0.099838 9.39216 0.285967L9.39145 10.4355L9.3915 10.4355Z" fill="#0052B4"/><path d="M6.26101 10.4351L6.26164 1.45941C2.96648 3.25703 0.607453 6.55457 0.101729 10.4347L6.26101 10.4351L6.26101 10.4351Z" fill="#0052B4"/><path d="M6.26074 13.5656L0.101501 13.5652C0.606683 17.4454 2.96525 20.7433 6.26015 22.5413L6.26074 13.5656Z" fill="#0052B4"/><path d="M9.39124 13.566L9.39053 23.7155C10.2305 23.9017 11.1032 24.0008 11.9992 24.0009C18.0961 24.0013 23.1309 19.4547 23.8983 13.5669L9.39124 13.5659L9.39124 13.566Z" fill="#0052B4"/></g><defs><clipPath id="clip0_13_19005"><rect width="24" height="24" fill="white" transform="translate(0.000854492)"/></clipPath></defs></svg>',
    en: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_19039)"><path d="M11.9992 24.0008C18.6266 24.0013 23.9996 18.6291 24 12.0017C24.0005 5.37426 18.6283 0.00130176 12.0009 0.000838609C5.37344 0.000375458 0.000479034 5.37258 1.58831e-05 12C-0.000447268 18.6274 5.37176 24.0004 11.9992 24.0008Z" fill="#F0F0F0"/><path d="M2.48117 4.69424C1.53848 5.92056 0.827615 7.33403 0.413649 8.86958L6.65637 8.87001L2.48117 4.69424Z" fill="#0052B4"/><path d="M23.5869 8.87119C23.1731 7.33563 22.4624 5.92206 21.5199 4.6956L17.3443 8.87075L23.5869 8.87119Z" fill="#0052B4"/><path d="M0.413208 15.1304C0.827007 16.6659 1.53767 18.0795 2.48015 19.3059L6.65579 15.1308L0.413208 15.1304Z" fill="#0052B4"/><path d="M19.3066 2.48188C18.0803 1.53918 16.6668 0.82832 15.1313 0.414307L15.1309 6.65698L19.3066 2.48188Z" fill="#0052B4"/><path d="M4.69356 21.5196C5.91988 22.4623 7.33335 23.1731 8.86885 23.5872L8.86929 17.3445L4.69356 21.5196Z" fill="#0052B4"/><path d="M8.8704 0.413866C7.33484 0.827665 5.92127 1.53833 4.69486 2.48081L8.86996 6.65649L8.8704 0.413866Z" fill="#0052B4"/><path d="M15.1297 23.5876C16.6653 23.1738 18.0788 22.4631 19.3052 21.5207L15.1301 17.345L15.1297 23.5876Z" fill="#0052B4"/><path d="M17.3438 15.1316L21.5189 19.3073C22.4616 18.081 23.1725 16.6675 23.5864 15.132L17.3438 15.1316Z" fill="#0052B4"/><path d="M23.8986 10.4365L13.5654 10.4357L13.5654 10.4357L13.5661 0.102526C13.0537 0.0357872 12.5313 0.000875681 12.0009 0.000838609C11.4703 0.00080153 10.948 0.03564 10.4356 0.102307L10.4349 10.4354L10.4349 10.4355L0.101703 10.4348C0.0349645 10.9471 5.29555e-05 11.4695 1.58831e-05 12C-2.11959e-05 12.5306 0.0348173 13.0529 0.101485 13.5652L10.4346 13.5659L10.4347 13.5659L10.4339 23.8992C10.9463 23.9659 11.4686 24.0008 11.9992 24.0008C12.5297 24.0009 13.052 23.9661 13.5644 23.8994L13.5651 13.5662L13.5651 13.5662L23.8983 13.5669C23.9651 13.0545 24 12.5323 24 12.0017C24.0001 11.4712 23.9652 10.9488 23.8986 10.4365Z" fill="#D80027"/><path d="M15.1302 15.1316L20.4847 20.4868C20.731 20.2407 20.9659 19.9833 21.1901 19.7165L16.606 15.1317L15.1302 15.1316L15.1302 15.1316Z" fill="#D80027"/><path d="M8.86932 15.1312L8.86923 15.1312L3.51409 20.4856C3.76026 20.7319 4.01764 20.9669 4.28443 21.1911L8.86922 16.6068L8.86932 15.1312Z" fill="#D80027"/><path d="M8.86981 8.87027L8.86981 8.87018L3.51537 3.51494C3.26907 3.76111 3.03412 4.01849 2.80994 4.28528L7.39414 8.87012L8.86981 8.87022L8.86981 8.87027Z" fill="#D80027"/><path d="M15.1307 8.87078L20.4859 3.51625C20.2397 3.26995 19.9824 3.035 19.7156 2.81087L15.1308 7.39506L15.1307 8.87078Z" fill="#D80027"/></g><defs><clipPath id="clip0_13_19039"><rect width="24" height="24" fill="white" transform="translate(0.000854492)"/></clipPath></defs></svg>',
    pl: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_18962)"><path d="M12.0004 24.0004C18.6278 24.0002 24.0002 18.6275 24 12.0001C23.9998 5.37266 18.6271 0.000220799 11.9997 0.000402828C5.37228 0.000584858 -0.000157612 5.37331 2.44179e-05 12.0007C0.000206447 18.6281 5.37294 24.0006 12.0004 24.0004Z" fill="#F0F0F0"/><path d="M10.9565 12.0005C10.9565 12.0005 3.52197 20.4877 3.51494 20.486C5.68653 22.6575 8.68662 24.0006 12.0004 24.0005C18.6277 24.0003 24.0002 18.6275 24 12.0002L10.9565 12.0005Z" fill="#D80027"/><path d="M3.51447 3.51528C-1.17169 8.20169 -1.17148 15.7997 3.51493 20.4859C5.45143 18.5493 7.31386 16.6868 12 12.0004L3.51447 3.51528Z" fill="#0052B4"/></g><defs><clipPath id="clip0_13_18962"><rect width="24" height="24" fill="white" transform="translate(-0.000305176 0.000732422)"/></clipPath></defs></svg>',
    gm: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_19484)"><path d="M0.746489 16.1745C2.44213 20.7441 6.84073 24.0005 12.0003 24.0003C17.1599 24.0002 21.5583 20.7435 23.2537 16.1739L12.0001 15.1308L0.746489 16.1745Z" fill="#FFDA44"/><path d="M11.9996 0.000423329C6.84 0.000565042 2.44158 3.25719 0.746187 7.82684L11.9998 8.86997L23.2534 7.82618C21.5578 3.25666 17.1592 0.000281615 11.9996 0.000423329Z" fill="black"/><path d="M0.746269 7.82688C0.263961 9.12688 -4.77456e-05 10.533 -7.42964e-06 12.0008C3.28864e-05 13.4686 0.264118 14.8747 0.746498 16.1747L23.2538 16.174C23.7361 14.874 24 13.468 24 12.0001C24 10.5323 23.7359 9.12624 23.2535 7.82627L0.746269 7.82688Z" fill="#D80027"/></g><defs><clipPath id="clip0_13_19484"><rect width="24" height="24" fill="white" transform="translate(-0.000366211 0.000732422)"/></clipPath></defs></svg>',
    france:
      '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#F0F0F0"/><path d="M24 12C24 6.84042 20.7435 2.44191 16.1739 0.746391V23.2537C20.7435 21.5581 24 17.1596 24 12Z" fill="#D80027"/><path d="M0 12C0 17.1596 3.25655 21.5581 7.82611 23.2536V0.746391C3.25655 2.44191 0 6.84042 0 12Z" fill="#0052B4"/></svg>',
    india:
      '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#F0F0F0"/><path d="M12 0C7.24247 0 3.13172 2.76867 1.19072 6.78263H22.8092C20.8683 2.76867 16.7575 0 12 0Z" fill="#FF9811"/><path d="M12 24C16.7575 24 20.8683 21.2313 22.8093 17.2174H1.19072C3.13172 21.2313 7.24247 24 12 24Z" fill="#6DA544"/><path d="M12 16.1739C14.3052 16.1739 16.1739 14.3052 16.1739 12C16.1739 9.69482 14.3052 7.82611 12 7.82611C9.69482 7.82611 7.82611 9.69482 7.82611 12C7.82611 14.3052 9.69482 16.1739 12 16.1739Z" fill="#0052B4"/><path d="M12 14.6087C13.4407 14.6087 14.6087 13.4407 14.6087 12C14.6087 10.5593 13.4407 9.39131 12 9.39131C10.5593 9.39131 9.39131 10.5593 9.39131 12C9.39131 13.4407 10.5593 14.6087 12 14.6087Z" fill="#F0F0F0"/><path d="M12 8.78091L12.8048 10.6061L14.7878 10.3905L13.6095 12L14.7878 13.6095L12.8048 13.3939L12 15.2191L11.1952 13.3939L9.2122 13.6095L10.3905 12L9.2122 10.3905L11.1952 10.6061L12 8.78091Z" fill="#0052B4"/></svg>',
    udefiend: "none",
  };

  switch (getCountryByLocation(location).toLowerCase().trim()) {
    case "france":
      return '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#F0F0F0"/><path d="M24 12C24 6.84042 20.7435 2.44191 16.1739 0.746391V23.2537C20.7435 21.5581 24 17.1596 24 12Z" fill="#D80027"/><path d="M0 12C0 17.1596 3.25655 21.5581 7.82611 23.2536V0.746391C3.25655 2.44191 0 6.84042 0 12Z" fill="#0052B4"/></svg>';
    case "india":
      return '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#F0F0F0"/><path d="M12 0C7.24247 0 3.13172 2.76867 1.19072 6.78263H22.8092C20.8683 2.76867 16.7575 0 12 0Z" fill="#FF9811"/><path d="M12 24C16.7575 24 20.8683 21.2313 22.8093 17.2174H1.19072C3.13172 21.2313 7.24247 24 12 24Z" fill="#6DA544"/><path d="M12 16.1739C14.3052 16.1739 16.1739 14.3052 16.1739 12C16.1739 9.69482 14.3052 7.82611 12 7.82611C9.69482 7.82611 7.82611 9.69482 7.82611 12C7.82611 14.3052 9.69482 16.1739 12 16.1739Z" fill="#0052B4"/><path d="M12 14.6087C13.4407 14.6087 14.6087 13.4407 14.6087 12C14.6087 10.5593 13.4407 9.39131 12 9.39131C10.5593 9.39131 9.39131 10.5593 9.39131 12C9.39131 13.4407 10.5593 14.6087 12 14.6087Z" fill="#F0F0F0"/><path d="M12 8.78091L12.8048 10.6061L14.7878 10.3905L13.6095 12L14.7878 13.6095L12.8048 13.3939L12 15.2191L11.1952 13.3939L9.2122 13.6095L10.3905 12L9.2122 10.3905L11.1952 10.6061L12 8.78091Z" fill="#0052B4"/></svg>';
  }
}

function getCityByLocation(location: string): string {
  var arr = location.split(",");

  return arr[0];
}

function Country(props: CountryProps) {
  return (
    <div class="col">
      <span>{props.title}</span>
      <div class="text">{getCountryByLocation(props.location)}</div>
    </div>
  );
}

// async function fetchDictionary(locale: Locale): Promise<Dictionary> {
//   const dict: RawDictionary = (await import(`../../shared/i18n/${locale}.ts`))
//     .dict;
//   return i18n.flatten(dict); // flatten the dictionary to make all nested keys available top-level
// }

export function DynamicJobCard(props: TJob) {
  // const [dict] = createResource("en", fetchDictionary);
  const dict = createMemo(() => i18n.flatten(en));
  const t = i18n.translator(dict);
  let cameraOffset = { x: window.innerWidth / 2, y: window.innerHeight / 2 };

  const [X, setX] = createSignal(0);
  const [Y, setY] = createSignal(0);
  const [filter, setFilter] = createSignal<"error" | "none" | "ok">("none");

  createEffect(() => {
    var card = document.getElementById(props.job_id);

    const hammer = new Hammer(card);

    var deltaX = 0;
    var deltaY = 0;

    hammer.on("pan", function (event) {
      card.classList.add(`${style.moving}`);
    });

    hammer.on("pan", function (event) {
      if (event.deltaX === 0) return;
      if (event.center.x === 0 && event.center.y === 0) return;

      // tinderContainer.classList.toggle('tinder_love', event.deltaX > 0);
      // tinderContainer.classList.toggle('tinder_nope', event.deltaX < 0);

      var xMulti = event.deltaX * 0.03;
      var yMulti = event.deltaY / 80;
      var rotate = xMulti * yMulti;

      event.target.style.transform =
        "translate(" +
        event.deltaX +
        "px, " +
        event.deltaY +
        "px) rotate(" +
        rotate +
        "deg)";
    });

    hammer.on("panend", function (event) {
      card.classList.remove("moving");
      //tinderContainer.classList.remove('tinder_love');
      //tinderContainer.classList.remove('tinder_nope');

      var moveOutWidth = document.body.clientWidth;
      var keep =
        Math.abs(event.deltaX) < 100 || Math.abs(event.velocityX) < 0.5;

      event.target.classList.toggle("removed", !keep);

      if (keep) {
        event.target.style.transform = "";
      } else {
        var endX = Math.max(
          Math.abs(event.velocityX) * moveOutWidth,
          moveOutWidth
        );
        var toX = event.deltaX > 0 ? endX : -endX;
        //var endY = Math.abs(event.velocityY) * moveOutWidth;
        //var toY = event.deltaY > 0 ? endY : -endY;
        var xMulti = event.deltaX * 0.03;
        //var yMulti = event.deltaY / 80;

        if (toX < 120) {
          console.log("Remove", props.job_id);
          props.handleDrop(event);
         
        } else if (toX > 120) {
          console.log("Add", props.job_id);
          props.handleAdd(props);
          console.log(event.target.parentElement);
          event.target.parentElement.remove();
        }
        // var rotate = xMulti * yMulti;

        event.target.style.transform = "translate(" + toX + "px)";
        //initCards();
      }
    });
  });

  const position = {
    x: 0,
  };

  function animation(event: MouseEvent) {
    console.log("Drag");
    // position.x = event.clientX;
    const element = event.target;
    element?.addEventListener("drag", (documentEvent) => {
      const x = position.x - documentEvent.clientX;

      //const y = position.y - documentEvent.clientY

      position.x = documentEvent.clientX;
      //position.y = documentEvent.clientY

      // element.style.top = element.offsetTop - y + 'px'

      setX(element.offsetLeft - x);
      console.log(element.offsetLeft, x, X() + "px");
      element.style.left = X() + "px";

      // This part is only for demonstration purposes
      // const positionElement = document.querySelector('.positions')
      // setX(element.offsetLeft - x)
      // positionElement.children[0].innerHTML = `x: ${x()}px`

      // positionElement.children[1].innerHTML = `y: ${element.offsetTop - y}px`
    });

    element.onmouseleave = () => {
      document.onmouseup = null;
      document.onmousemove = null;
    };
  }

  function getEventLocation(e) {
    if (e.touches && e.touches.length == 1) {
      return { x: e.touches[0].clientX, y: e.touches[0].clientY };
    } else if (e.clientX && e.clientY) {
      return { x: e.clientX, y: e.clientY };
    }
  }

  //const Animation = createMemo(animation)

  if (props.type == "job") {
    return (
      <Show when={dict()}>
        <div class={`${style.overlay} card-container`}>
          <article
            style={{
              "z-index": props.idx * 100,
            }}
            id={props.job_id}
            class={`${style.jobcard} ${filter()}`}
            draggable={props.draggable}
          >
            <img src={pm} />
            <div class={style.container}>
              <div class={style.header}>
                <div class={style.title}>{props.title}</div>
                <strong>
                  {getShortSalary(props.salary) !== ""
                    ? getShortSalary(props.salary)
                    : " Discussed Salary"}
                </strong>
              </div>

              <div class={style.body}>
                <span class={style.col}>
                  {t("default.company")}

                  <div></div>
                  <strong>{props.company}</strong>
                </span>

                <span class={style.col}>
                  {t("default.location")} <strong>{props.location}</strong>
                </span>
              </div>
            </div>
          </article>
          <div class={style.actions}>{props.actions && props.actions}</div>
        </div>
      </Show>
    );
  } else {
    return (
      <Show when={dict()}>
        <div class={`${filter()} ${style.overlay}`}></div>
        <article
          id={props.job_id}
          class={`${style.jobcard} ${filter()}`}
          draggable="true"
        >
          <div class={style.container}>
            <div class={style.header}>
              <div class={style.title}>{props.title}</div>
            </div>

            <div class={style.body}></div>
          </div>
        </article>
      </Show>
    );
  }
}

export function StaticJobCard(props: Props) {
  const iconsByCountry = {
    sw: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_19005)"><path d="M11.9992 24.0008C18.6266 24.0013 23.9996 18.6291 24 12.0017C24.0005 5.37426 18.6283 0.00130176 12.0009 0.000838609C5.37344 0.000375458 0.000479034 5.37258 1.58832e-05 12C-0.000447268 18.6274 5.37176 24.0004 11.9992 24.0008Z" fill="#FFDA44"/><path d="M9.3915 10.4355L23.8986 10.4365C23.132 4.54866 18.0978 0.0013408 12.0009 0.000914728C11.1049 0.000852114 10.2321 0.099838 9.39216 0.285967L9.39145 10.4355L9.3915 10.4355Z" fill="#0052B4"/><path d="M6.26101 10.4351L6.26164 1.45941C2.96648 3.25703 0.607453 6.55457 0.101729 10.4347L6.26101 10.4351L6.26101 10.4351Z" fill="#0052B4"/><path d="M6.26074 13.5656L0.101501 13.5652C0.606683 17.4454 2.96525 20.7433 6.26015 22.5413L6.26074 13.5656Z" fill="#0052B4"/><path d="M9.39124 13.566L9.39053 23.7155C10.2305 23.9017 11.1032 24.0008 11.9992 24.0009C18.0961 24.0013 23.1309 19.4547 23.8983 13.5669L9.39124 13.5659L9.39124 13.566Z" fill="#0052B4"/></g><defs><clipPath id="clip0_13_19005"><rect width="24" height="24" fill="white" transform="translate(0.000854492)"/></clipPath></defs></svg>',
    en: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_19039)"><path d="M11.9992 24.0008C18.6266 24.0013 23.9996 18.6291 24 12.0017C24.0005 5.37426 18.6283 0.00130176 12.0009 0.000838609C5.37344 0.000375458 0.000479034 5.37258 1.58831e-05 12C-0.000447268 18.6274 5.37176 24.0004 11.9992 24.0008Z" fill="#F0F0F0"/><path d="M2.48117 4.69424C1.53848 5.92056 0.827615 7.33403 0.413649 8.86958L6.65637 8.87001L2.48117 4.69424Z" fill="#0052B4"/><path d="M23.5869 8.87119C23.1731 7.33563 22.4624 5.92206 21.5199 4.6956L17.3443 8.87075L23.5869 8.87119Z" fill="#0052B4"/><path d="M0.413208 15.1304C0.827007 16.6659 1.53767 18.0795 2.48015 19.3059L6.65579 15.1308L0.413208 15.1304Z" fill="#0052B4"/><path d="M19.3066 2.48188C18.0803 1.53918 16.6668 0.82832 15.1313 0.414307L15.1309 6.65698L19.3066 2.48188Z" fill="#0052B4"/><path d="M4.69356 21.5196C5.91988 22.4623 7.33335 23.1731 8.86885 23.5872L8.86929 17.3445L4.69356 21.5196Z" fill="#0052B4"/><path d="M8.8704 0.413866C7.33484 0.827665 5.92127 1.53833 4.69486 2.48081L8.86996 6.65649L8.8704 0.413866Z" fill="#0052B4"/><path d="M15.1297 23.5876C16.6653 23.1738 18.0788 22.4631 19.3052 21.5207L15.1301 17.345L15.1297 23.5876Z" fill="#0052B4"/><path d="M17.3438 15.1316L21.5189 19.3073C22.4616 18.081 23.1725 16.6675 23.5864 15.132L17.3438 15.1316Z" fill="#0052B4"/><path d="M23.8986 10.4365L13.5654 10.4357L13.5654 10.4357L13.5661 0.102526C13.0537 0.0357872 12.5313 0.000875681 12.0009 0.000838609C11.4703 0.00080153 10.948 0.03564 10.4356 0.102307L10.4349 10.4354L10.4349 10.4355L0.101703 10.4348C0.0349645 10.9471 5.29555e-05 11.4695 1.58831e-05 12C-2.11959e-05 12.5306 0.0348173 13.0529 0.101485 13.5652L10.4346 13.5659L10.4347 13.5659L10.4339 23.8992C10.9463 23.9659 11.4686 24.0008 11.9992 24.0008C12.5297 24.0009 13.052 23.9661 13.5644 23.8994L13.5651 13.5662L13.5651 13.5662L23.8983 13.5669C23.9651 13.0545 24 12.5323 24 12.0017C24.0001 11.4712 23.9652 10.9488 23.8986 10.4365Z" fill="#D80027"/><path d="M15.1302 15.1316L20.4847 20.4868C20.731 20.2407 20.9659 19.9833 21.1901 19.7165L16.606 15.1317L15.1302 15.1316L15.1302 15.1316Z" fill="#D80027"/><path d="M8.86932 15.1312L8.86923 15.1312L3.51409 20.4856C3.76026 20.7319 4.01764 20.9669 4.28443 21.1911L8.86922 16.6068L8.86932 15.1312Z" fill="#D80027"/><path d="M8.86981 8.87027L8.86981 8.87018L3.51537 3.51494C3.26907 3.76111 3.03412 4.01849 2.80994 4.28528L7.39414 8.87012L8.86981 8.87022L8.86981 8.87027Z" fill="#D80027"/><path d="M15.1307 8.87078L20.4859 3.51625C20.2397 3.26995 19.9824 3.035 19.7156 2.81087L15.1308 7.39506L15.1307 8.87078Z" fill="#D80027"/></g><defs><clipPath id="clip0_13_19039"><rect width="24" height="24" fill="white" transform="translate(0.000854492)"/></clipPath></defs></svg>',
    pl: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_18962)"><path d="M12.0004 24.0004C18.6278 24.0002 24.0002 18.6275 24 12.0001C23.9998 5.37266 18.6271 0.000220799 11.9997 0.000402828C5.37228 0.000584858 -0.000157612 5.37331 2.44179e-05 12.0007C0.000206447 18.6281 5.37294 24.0006 12.0004 24.0004Z" fill="#F0F0F0"/><path d="M10.9565 12.0005C10.9565 12.0005 3.52197 20.4877 3.51494 20.486C5.68653 22.6575 8.68662 24.0006 12.0004 24.0005C18.6277 24.0003 24.0002 18.6275 24 12.0002L10.9565 12.0005Z" fill="#D80027"/><path d="M3.51447 3.51528C-1.17169 8.20169 -1.17148 15.7997 3.51493 20.4859C5.45143 18.5493 7.31386 16.6868 12 12.0004L3.51447 3.51528Z" fill="#0052B4"/></g><defs><clipPath id="clip0_13_18962"><rect width="24" height="24" fill="white" transform="translate(-0.000305176 0.000732422)"/></clipPath></defs></svg>',
    gm: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_13_19484)"><path d="M0.746489 16.1745C2.44213 20.7441 6.84073 24.0005 12.0003 24.0003C17.1599 24.0002 21.5583 20.7435 23.2537 16.1739L12.0001 15.1308L0.746489 16.1745Z" fill="#FFDA44"/><path d="M11.9996 0.000423329C6.84 0.000565042 2.44158 3.25719 0.746187 7.82684L11.9998 8.86997L23.2534 7.82618C21.5578 3.25666 17.1592 0.000281615 11.9996 0.000423329Z" fill="black"/><path d="M0.746269 7.82688C0.263961 9.12688 -4.77456e-05 10.533 -7.42964e-06 12.0008C3.28864e-05 13.4686 0.264118 14.8747 0.746498 16.1747L23.2538 16.174C23.7361 14.874 24 13.468 24 12.0001C24 10.5323 23.7359 9.12624 23.2535 7.82627L0.746269 7.82688Z" fill="#D80027"/></g><defs><clipPath id="clip0_13_19484"><rect width="24" height="24" fill="white" transform="translate(-0.000366211 0.000732422)"/></clipPath></defs></svg>',
  };

  const t = useTranslations("jobcard");

  return (
    <article class="jobcard jobcard--selected">
      <div class="container">
        <Chip label="Selected" theme="accent" variant="filled" />
        <div class={style.header}>
          <div
            class={style.countryBall}
            dangerouslySetInnerHTML={{
              __html: getIconByCountry(props.location),
            }}
          />
          <h3 class={style.title}>{props.title}</h3>
        </div>
        <div class="body">
          <div class="col">
            <span>{t("salary")}</span>
            <strong>{props.salary ? props.salary : t("no_salary")}</strong>
          </div>

          <div class="col">
            <span>{t("company")}</span>
            <div class="company">
              {/* {props.company.split(" ")[0][0]  
								&&
								props.company.split(" ")[1][0]
								&& <div class="ball">
									{props.company.split(" ")[0][0]}
									{props.company.split(" ")[1][0]}
									</div>} */}

              <div class="text">{props.company}</div>
            </div>
          </div>
          <div class="col">
            <span>{t("location")}</span>
            <div class="text">{getCityByLocation(props.location)}</div>
          </div>
          <div class="col">
            <span>{t("conditions")}</span>
            <div class="text">{props.employment_type}</div>
          </div>
          {/* {props.employment_type && (
							<div class="col">
								<span>{t("conditions")}</span>
								<div class="text">
									{props.conditions == "remote" && (
										<svg
											width="20"
											height="20"
											viewBox="0 0 20 20"
											fill="none"
											xmlns="http://www.w3.org/2000/svg"
										>
											<path
												fill-rule="evenodd"
												clip-rule="evenodd"
												d="M11.5098 15.4323C10.9038 16.6829 10.3186 16.875 10 16.875C9.68142 16.875 9.09623 16.6829 8.49019 15.4323C8.02484 14.4721 7.68118 13.1097 7.55392 11.4483C8.34543 11.5233 9.16377 11.5625 10 11.5625C10.8362 11.5625 11.6546 11.5233 12.4461 11.4483C12.3188 13.1097 11.9752 14.4721 11.5098 15.4323ZM12.4952 9.55913C11.6974 9.64277 10.8621 9.68746 10 9.68746C9.13791 9.68746 8.30255 9.64277 7.50482 9.55913C7.55151 7.43815 7.93391 5.71558 8.49019 4.56769C9.09622 3.31715 9.68142 3.125 10 3.125C10.3186 3.125 10.9038 3.31715 11.5098 4.56769C12.0661 5.71558 12.4485 7.43815 12.4952 9.55913ZM14.3421 11.1918C14.2356 13.0857 13.8736 14.7515 13.2979 16.0338C15.27 14.9537 16.6546 12.9349 16.851 10.5786C16.0743 10.8271 15.2329 11.0334 14.3421 11.1918ZM16.7399 8.63688C16.0249 8.89309 15.2266 9.11079 14.3632 9.28043C14.2937 7.1912 13.921 5.35409 13.2979 3.96618C15.0473 4.92435 16.3344 6.62109 16.7399 8.63688ZM5.63684 9.28043C5.70626 7.1912 6.07901 5.35409 6.70205 3.96618C4.95274 4.92435 3.66559 6.62109 3.26012 8.63688C3.97512 8.8931 4.77339 9.11079 5.63684 9.28043ZM3.149 10.5786C3.34535 12.9349 4.73004 14.9537 6.70205 16.0338C6.1264 14.7515 5.76441 13.0857 5.65792 11.1918C4.76712 11.0334 3.92565 10.8271 3.149 10.5786ZM18.75 10C18.75 5.16751 14.8325 1.25 10 1.25C5.16751 1.25 1.25 5.16751 1.25 10C1.25 14.8325 5.16751 18.75 10 18.75C14.8325 18.75 18.75 14.8325 18.75 10Z"
												fill="#3393FE"
											/>
										</svg>
									)}
									{props.conditions == "hybrid" && (
										<svg
											width="20"
											height="24"
											viewBox="0 0 20 24"
											fill="none"
											xmlns="http://www.w3.org/2000/svg"
										>
											<path
												fill-rule="evenodd"
												clip-rule="evenodd"
												d="M10 5.125H15C16.0355 5.125 16.875 5.96447 16.875 7V12C16.875 13.0355 16.0355 13.875 15 13.875H13.75V12C13.75 9.92893 12.0711 8.25 10 8.25H8.125V7C8.125 5.96447 8.96447 5.125 10 5.125ZM6.25 8.25V7C6.25 4.92893 7.92893 3.25 10 3.25H15C17.0711 3.25 18.75 4.92893 18.75 7V12C18.75 14.0711 17.0711 15.75 15 15.75H13.75V17C13.75 19.0711 12.0711 20.75 10 20.75H5C2.92893 20.75 1.25 19.0711 1.25 17V12C1.25 9.92893 2.92893 8.25 5 8.25H6.25ZM11.875 15.75V17C11.875 18.0355 11.0355 18.875 10 18.875H5C3.96447 18.875 3.125 18.0355 3.125 17V12C3.125 10.9645 3.96447 10.125 5 10.125H6.25V12C6.25 14.0711 7.92893 15.75 10 15.75H11.875ZM11.875 13.875H10C8.96447 13.875 8.125 13.0355 8.125 12V10.125H10C11.0355 10.125 11.875 10.9645 11.875 12V13.875Z"
												fill="#3393FE"
											/>
										</svg>
									)}
									{props.conditions == "office" && (
										<svg
											width="17"
											height="20"
											viewBox="0 0 17 20"
											fill="none"
											xmlns="http://www.w3.org/2000/svg"
										>
											<path
												fill-rule="evenodd"
												clip-rule="evenodd"
												d="M8.34411 6.18958e-07C7.92242 -1.28926e-05 7.55857 -2.45459e-05 7.25892 0.0254773C6.94265 0.0523948 6.62807 0.111825 6.32537 0.272487C5.87378 0.51217 5.50663 0.894621 5.27653 1.36503C5.12229 1.68034 5.06524 2.00803 5.0394 2.33748C5.01492 2.64962 5.01493 3.02859 5.01494 3.46788L5.01494 8.07561C4.78127 8.07561 4.54759 8.11115 4.32147 8.18224C4.0205 8.27687 3.77123 8.44015 3.53881 8.62613C3.26991 8.84128 3.0191 9.08328 2.76722 9.31944L1.27392 10.7193C1.01435 10.9622 0.785559 11.1763 0.616134 11.4418C0.467357 11.675 0.357239 11.9325 0.290378 12.2037C0.214238 12.5125 0.214543 12.8329 0.21489 13.1963L0.214936 16.5321C0.214922 16.9714 0.21491 17.3504 0.239393 17.6625C0.265234 17.992 0.322286 18.3197 0.476522 18.635C0.706618 19.1054 1.07377 19.4878 1.52536 19.7275C1.82807 19.8882 2.14264 19.9476 2.45892 19.9745C2.75857 20 3.12238 20 3.54409 20H12.8858C13.3075 20 13.6713 20 13.971 19.9745C14.2873 19.9476 14.6018 19.8882 14.9045 19.7275C15.3561 19.4878 15.7233 19.1054 15.9534 18.635C16.1076 18.3197 16.1647 17.992 16.1905 17.6625C16.215 17.3504 16.215 16.9714 16.215 16.5321V3.46786C16.215 3.02858 16.215 2.64962 16.1905 2.33748C16.1647 2.00803 16.1076 1.68034 15.9534 1.36503C15.7233 0.894621 15.3561 0.51217 14.9045 0.272487C14.6018 0.111825 14.2873 0.0523948 13.971 0.0254773C13.6713 -2.45459e-05 13.3075 -1.28926e-05 12.8859 6.18958e-07H8.34411ZM7.2412 9.29931C7.00923 9.08182 6.80227 8.88779 6.61495 8.72851V3.5C6.61495 3.01954 6.61557 2.70931 6.63409 2.4732C6.65184 2.24681 6.68199 2.16288 6.70214 2.12168C6.77884 1.96488 6.90122 1.83739 7.05175 1.7575C7.09131 1.7365 7.17189 1.70511 7.38922 1.68661C7.61589 1.66732 7.91371 1.66667 8.37495 1.66667H12.855C13.3162 1.66667 13.614 1.66732 13.8407 1.68661C14.058 1.70511 14.1386 1.7365 14.1781 1.7575C14.3287 1.83739 14.4511 1.96488 14.5278 2.12168C14.5479 2.16288 14.5781 2.24681 14.5958 2.4732C14.6143 2.70931 14.615 3.01954 14.615 3.5V16.5C14.615 16.9805 14.6143 17.2907 14.5958 17.5268C14.5781 17.7532 14.5479 17.8371 14.5278 17.8783C14.4511 18.0351 14.3287 18.1626 14.1781 18.2425C14.1386 18.2635 14.058 18.2949 13.8407 18.3134C13.6414 18.3304 13.387 18.3329 13.015 18.3333V17.5C13.015 17.228 13.015 17.0921 12.9691 16.986C12.917 16.8653 12.8242 16.7687 12.7084 16.7144C12.6066 16.6667 12.476 16.6667 12.215 16.6667C11.9539 16.6667 11.8233 16.6667 11.7215 16.7144C11.6057 16.7687 11.5129 16.8653 11.4608 16.986C11.415 17.0921 11.415 17.228 11.415 17.5V18.3333H9.81495L9.815 13.1963C9.81534 12.8329 9.81565 12.5125 9.73951 12.2037C9.67265 11.9325 9.56253 11.675 9.41375 11.4418C9.24433 11.1763 9.01555 10.9622 8.75599 10.7194L7.2412 9.29931ZM8.21495 13.271V18.3333L5.81485 18.3333V16.6667C5.81485 16.3947 5.81485 16.2587 5.76904 16.1527C5.71689 16.032 5.62413 15.9354 5.50827 15.8811C5.40648 15.8333 5.27593 15.8333 5.01485 15.8333C4.75377 15.8333 4.62323 15.8333 4.52144 15.8811C4.40557 15.9354 4.31281 16.032 4.26066 16.1527C4.21485 16.2587 4.21485 16.3947 4.21485 16.6667V18.3333L3.57494 18.3333C3.1137 18.3333 2.81588 18.3327 2.58921 18.3134C2.37188 18.2949 2.2913 18.2635 2.25175 18.2425C2.10122 18.1626 1.97883 18.0351 1.90213 17.8783C1.88198 17.8371 1.85184 17.7532 1.83408 17.5268C1.81556 17.2907 1.81494 16.9805 1.81494 16.5V13.271C1.81494 12.7909 1.82081 12.6965 1.84009 12.6183C1.86237 12.5279 1.89908 12.4421 1.94867 12.3643C1.99157 12.2971 2.05498 12.2294 2.39756 11.9083L3.83756 10.5583C4.14948 10.2658 4.34982 10.0788 4.51348 9.94786C4.66928 9.82319 4.74248 9.79081 4.78379 9.77782C4.93453 9.73042 5.09536 9.73042 5.2461 9.77782C5.28741 9.79081 5.36061 9.82319 5.5164 9.94786C5.68007 10.0788 5.8804 10.2658 6.19232 10.5583L7.63232 11.9083C7.9749 12.2294 8.03832 12.2971 8.08122 12.3643C8.13081 12.4421 8.16751 12.5279 8.1898 12.6183C8.20908 12.6965 8.21495 12.7909 8.21495 13.271ZM8.26076 3.6527C8.21495 3.75873 8.21495 3.89471 8.21495 4.16667C8.21495 4.43863 8.21495 4.57461 8.26076 4.68064C8.31291 4.80133 8.40567 4.89796 8.52153 4.95228C8.62332 5 8.75387 5 9.01495 5C9.27603 5 9.40658 5 9.50837 4.95228C9.62423 4.89796 9.71699 4.80133 9.76914 4.68064C9.81495 4.57461 9.81495 4.43863 9.81495 4.16667C9.81495 3.89471 9.81495 3.75873 9.76914 3.6527C9.71699 3.532 9.62423 3.43538 9.50837 3.38106C9.40658 3.33334 9.27603 3.33334 9.01495 3.33334C8.75387 3.33334 8.62332 3.33334 8.52153 3.38106C8.40567 3.43538 8.31291 3.532 8.26076 3.6527ZM11.415 4.16667C11.415 3.89471 11.415 3.75873 11.4608 3.6527C11.5129 3.532 11.6057 3.43538 11.7215 3.38106C11.8233 3.33334 11.9539 3.33334 12.215 3.33334C12.476 3.33334 12.6066 3.33334 12.7084 3.38106C12.8242 3.43538 12.917 3.532 12.9691 3.6527C13.015 3.75873 13.015 3.89471 13.015 4.16667C13.015 4.43863 13.015 4.57461 12.9691 4.68064C12.917 4.80133 12.8242 4.89796 12.7084 4.95228C12.6066 5 12.476 5 12.215 5C11.9539 5 11.8233 5 11.7215 4.95228C11.6057 4.89796 11.5129 4.80133 11.4608 4.68064C11.415 4.57461 11.415 4.43863 11.415 4.16667ZM11.4608 6.98603C11.415 7.09206 11.415 7.22804 11.415 7.5C11.415 7.77196 11.415 7.90795 11.4608 8.01398C11.5129 8.13467 11.6057 8.2313 11.7215 8.28561C11.8233 8.33334 11.9539 8.33334 12.215 8.33334C12.476 8.33334 12.6066 8.33334 12.7084 8.28561C12.8242 8.2313 12.917 8.13467 12.9691 8.01398C13.015 7.90795 13.015 7.77196 13.015 7.5C13.015 7.22804 13.015 7.09206 12.9691 6.98603C12.917 6.86534 12.8242 6.76871 12.7084 6.71439C12.6066 6.66667 12.476 6.66667 12.215 6.66667C11.9539 6.66667 11.8233 6.66667 11.7215 6.71439C11.6057 6.76871 11.5129 6.86534 11.4608 6.98603ZM8.21495 7.5C8.21495 7.22804 8.21495 7.09206 8.26076 6.98603C8.31291 6.86534 8.40567 6.76871 8.52153 6.71439C8.62332 6.66667 8.75387 6.66667 9.01495 6.66667C9.27603 6.66667 9.40658 6.66667 9.50837 6.71439C9.62423 6.76871 9.71699 6.86534 9.76914 6.98603C9.81495 7.09206 9.81495 7.22804 9.81495 7.5C9.81495 7.77196 9.81495 7.90795 9.76914 8.01398C9.71699 8.13467 9.62423 8.2313 9.50837 8.28561C9.40658 8.33334 9.27603 8.33334 9.01495 8.33334C8.75387 8.33334 8.62332 8.33334 8.52153 8.28561C8.40567 8.2313 8.31291 8.13467 8.26076 8.01398C8.21495 7.90795 8.21495 7.77196 8.21495 7.5ZM11.4608 10.3194C11.415 10.4254 11.415 10.5614 11.415 10.8333C11.415 11.1053 11.415 11.2413 11.4608 11.3473C11.5129 11.468 11.6057 11.5646 11.7215 11.6189C11.8233 11.6667 11.9539 11.6667 12.215 11.6667C12.476 11.6667 12.6066 11.6667 12.7084 11.6189C12.8242 11.5646 12.917 11.468 12.9691 11.3473C13.015 11.2413 13.015 11.1053 13.015 10.8333C13.015 10.5614 13.015 10.4254 12.9691 10.3194C12.917 10.1987 12.8242 10.102 12.7084 10.0477C12.6066 10 12.476 10 12.215 10C11.9539 10 11.8233 10 11.7215 10.0477C11.6057 10.102 11.5129 10.1987 11.4608 10.3194ZM11.415 14.1667C11.415 13.8947 11.415 13.7587 11.4608 13.6527C11.5129 13.532 11.6057 13.4354 11.7215 13.3811C11.8233 13.3333 11.9539 13.3333 12.215 13.3333C12.476 13.3333 12.6066 13.3333 12.7084 13.3811C12.8242 13.4354 12.917 13.532 12.9691 13.6527C13.015 13.7587 13.015 13.8947 13.015 14.1667C13.015 14.4386 13.015 14.5746 12.9691 14.6806C12.917 14.8013 12.8242 14.898 12.7084 14.9523C12.6066 15 12.476 15 12.215 15C11.9539 15 11.8233 15 11.7215 14.9523C11.6057 14.898 11.5129 14.8013 11.4608 14.6806C11.415 14.5746 11.415 14.4386 11.415 14.1667ZM4.21485 13.3333C4.21485 13.0614 4.21485 12.9254 4.26066 12.8194C4.31281 12.6987 4.40557 12.602 4.52144 12.5477C4.62323 12.5 4.75377 12.5 5.01485 12.5C5.27593 12.5 5.40648 12.5 5.50827 12.5477C5.62413 12.602 5.71689 12.6987 5.76904 12.8194C5.81485 12.9254 5.81485 13.0614 5.81485 13.3333C5.81485 13.6053 5.81485 13.7413 5.76904 13.8473C5.71689 13.968 5.62413 14.0646 5.50827 14.1189C5.40648 14.1667 5.27593 14.1667 5.01485 14.1667C4.75377 14.1667 4.62323 14.1667 4.52144 14.1189C4.40557 14.0646 4.31281 13.968 4.26066 13.8473C4.21485 13.7413 4.21485 13.6053 4.21485 13.3333Z"
												fill="#3393FE"
											/>
										</svg>
									)}
								</div>
							</div>
						)} */}
          <div class="col">
            <span>{t("published")}</span>
            <div class="text">{props.created}</div>
          </div>
        </div>
        {props.actions && props.actions}
        {/* <div class="actions">
					<svg
						width="20"
						height="16"
						viewBox="0 0 20 16"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							fill-rule="evenodd"
							clip-rule="evenodd"
							d="M3.78792 0.462087C3.4218 0.0959708 2.82821 0.0959709 2.4621 0.462087C2.09598 0.828204 2.09598 1.4218 2.4621 1.78791L3.49905 2.82486C2.273 3.82907 1.28239 5.11487 0.624384 6.59538L0.299643 7.32605C0.108859 7.75531 0.108859 8.24531 0.299643 8.67457L0.624569 9.40565C1.81722 12.0891 4.10258 14.1329 6.90208 15.0196C8.91799 15.6581 11.082 15.6581 13.0979 15.0196C13.7331 14.8184 14.3419 14.5576 14.9175 14.2433L16.2121 15.5379C16.5782 15.904 17.1718 15.904 17.5379 15.5379C17.904 15.1718 17.904 14.5782 17.5379 14.2121L3.78792 0.462087ZM13.5221 12.8479L11.9051 11.2309C11.3468 11.5608 10.6955 11.7502 9.99997 11.7502C7.9289 11.7502 6.24997 10.0713 6.24997 8.00019C6.24997 7.30468 6.43931 6.6534 6.76926 6.09508L4.83289 4.15871C3.76356 4.99548 2.90138 6.08879 2.33778 7.35689L2.05182 8.00031L2.33797 8.64414C3.31266 10.8372 5.18036 12.5075 7.46824 13.2321C9.11573 13.7539 10.8842 13.7539 12.5317 13.2321C12.8716 13.1245 13.2023 12.9959 13.5221 12.8479ZM8.18853 7.51434C8.14707 7.6693 8.12497 7.83216 8.12497 8.00019C8.12497 9.03572 8.96444 9.87519 9.99997 9.87519C10.168 9.87519 10.3309 9.85308 10.4858 9.81163L8.18853 7.51434ZM10.2618 4.25918L13.741 7.73837C13.6125 5.87595 12.1242 4.38763 10.2618 4.25918ZM17.662 8.64414C17.3609 9.3216 16.9746 9.94917 16.517 10.5144L17.8488 11.8462C18.4638 11.1157 18.9797 10.2959 19.3754 9.40565L19.7003 8.67457C19.8911 8.24531 19.8911 7.75531 19.7003 7.32605L19.3756 6.59538C18.1828 3.91166 15.8972 1.86775 13.0973 0.981142C11.1023 0.34939 8.96236 0.342939 6.96439 0.961789L8.51295 2.51034C9.84821 2.26973 11.2276 2.35583 12.5313 2.76866C14.8194 3.49324 16.6874 5.16363 17.6622 7.35689L17.9481 8.00031L17.662 8.64414Z"
							fill="#3393FE"
						></path>
					</svg>

					<button name="trigger" class="btn btn--primary"></button>
					<svg
						width="20"
						height="19"
						viewBox="0 0 20 19"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							fill-rule="evenodd"
							clip-rule="evenodd"
							d="M11.4929 6.24914L11.9315 7.3415L13.106 7.42113L17.1029 7.69215L14.0286 10.2607L13.1253 11.0155L13.4125 12.1571L14.3898 16.0421L10.997 13.912L10 13.2861L9.00305 13.912L5.61016 16.0421L6.58754 12.1571L6.87472 11.0155L5.97138 10.2607L2.89709 7.69215L6.89403 7.42113L8.06847 7.3415L8.50713 6.24914L10 2.53158L11.4929 6.24914ZM1.83856 5.88462L6.76718 5.55043L8.60805 0.966295C9.1119 -0.288409 10.8881 -0.288406 11.392 0.966298L13.2328 5.55043L18.1615 5.88462C19.5104 5.97609 20.0593 7.66536 19.0217 8.53228L15.2308 11.6996L16.436 16.4903C16.7659 17.8015 15.3289 18.8456 14.1838 18.1266L10 15.5L5.81623 18.1266C4.67111 18.8456 3.23412 17.8015 3.56399 16.4903L4.76919 11.6996L0.978279 8.53228C-0.0593164 7.66536 0.489565 5.97609 1.83856 5.88462Z"
							fill="#3393FE"
						></path>
					</svg>
				</div> */}
      </div>
    </article>
  );
}
